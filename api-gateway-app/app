version: "3.9"

services:
  inventory-db:
    build:
      context: ./inventory-db
    container_name: inventory-db
    ports:
      - "5432:5432"
    volumes:
      - inventory-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${INVENTORY_USER}
      POSTGRES_PASSWORD: ${INVENTORY_PASS}
      POSTGRES_DB: ${INVENTORY_DB}
    restart: always

  billing-db:
    build:
      context: ./billing-db
    container_name: billing-db
    ports:
      - "5433:5432"
    volumes:
      - billing-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${BILLING_USER}
      POSTGRES_PASSWORD: ${BILLING_PASS}
      POSTGRES_DB: ${BILLING_DB}
    restart: always

  inventory-app:
    build:
      context: ./inventory-app
    container_name: inventory-app
    ports:
      - "8081:8080"
    depends_on:
      - inventory-db
    networks:
      - app-network
    restart: always

  billing-app:
    build:
      context: ./billing-app
    container_name: billing-app
    ports:
      - "8082:8080"
    depends_on:
      - billing-db
      - rabbit-queue
    networks:
      - app-network
    restart: always

  rabbit-queue:
    image: rabbitmq:3-management
    container_name: rabbit-queue
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    restart: always

  api-gateway-app:
    build:
      context: ./api-gateway-app
    container_name: api-gateway-app
    ports:
      - "3000:3000"
    depends_on:
      - inventory-app
      - billing-app
    networks:
      - app-network
    volumes:
      - api-gateway-logs:/app/logs
    restart: always

volumes:
  inventory-db-data:
  billing-db-data:
  api-gateway-logs:

networks:
  app-network:
    driver: bridge
